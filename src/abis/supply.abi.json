[
    {
        "type": "impl",
        "name": "SupplyImplBlock",
        "interface_name": "common::interfaces::supply::ISupply"
    },
    {
        "type": "struct",
        "name": "core::integer::u256",
        "members": [
            {
                "name": "low",
                "type": "core::integer::u128"
            },
            {
                "name": "high",
                "type": "core::integer::u128"
            }
        ]
    },
    {
        "type": "enum",
        "name": "core::bool",
        "variants": [
            {
                "name": "False",
                "type": "()"
            },
            {
                "name": "True",
                "type": "()"
            }
        ]
    },
    {
        "type": "struct",
        "name": "core::byte_array::ByteArray",
        "members": [
            {
                "name": "data",
                "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
                "name": "pending_word",
                "type": "core::felt252"
            },
            {
                "name": "pending_word_len",
                "type": "core::integer::u32"
            }
        ]
    },
    {
        "type": "function",
        "name": "deposit",
        "inputs": [
            {
                "name": "amount",
                "type": "core::integer::u256"
            },
            {
                "name": "receiver",
                "type": "core::starknet::contract_address::ContractAddress"
            }
        ],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "lock_rTokens",
        "inputs": [
            {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "rTokens_amount",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "free_locked_rTokens",
        "inputs": [
            {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "rTokens_amount",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "transfer_assets_to_borrow_vault",
        "inputs": [
            {
                "name": "loan_id",
                "type": "core::felt252"
            },
            {
                "name": "amount_assets",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "liquidation_transfer",
        "inputs": [
            {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "recipient",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "rTokens_amount",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "repay_from_borrow_vault",
        "inputs": [
            {
                "name": "loan_id",
                "type": "core::felt252"
            },
            {
                "name": "amount_assets_to_repay",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "update_deposit_vault_state",
        "inputs": [
            {
                "name": "deposit_apr",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "withdraw",
        "inputs": [
            {
                "name": "assets",
                "type": "core::integer::u256"
            },
            {
                "name": "receiver",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "owner",
                "type": "core::starknet::contract_address::ContractAddress"
            }
        ],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "transfer",
        "inputs": [
            {
                "name": "recipient",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "amount",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [
            {
                "type": "core::bool"
            }
        ],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "transferFrom",
        "inputs": [
            {
                "name": "sender",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "recipient",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "amount",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [
            {
                "type": "core::bool"
            }
        ],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "approve",
        "inputs": [
            {
                "name": "spender",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "amount",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [
            {
                "type": "core::bool"
            }
        ],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "increase_allowance",
        "inputs": [
            {
                "name": "spender",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "added_value",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "decrease_allowance",
        "inputs": [
            {
                "name": "spender",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "subtracted_value",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "ERC20_decrease_allowance_manual",
        "inputs": [
            {
                "name": "owner",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "spender",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "subtracted_value",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "set_daily_withdrawal_threshold",
        "inputs": [
            {
                "name": "threshold",
                "type": "core::felt252"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "set_min_snapshot_reserves",
        "inputs": [
            {
                "name": "reserves",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "preview_deposit",
        "inputs": [
            {
                "name": "amount",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "exchange_rate",
        "inputs": [],
        "outputs": [
            {
                "type": "(core::integer::u256, core::integer::u256)"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "total_assets",
        "inputs": [],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "unaccrued_total_assets",
        "inputs": [],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "total_lent_assets",
        "inputs": [],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "rToken_incentive",
        "inputs": [],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "get_free_rTokens",
        "inputs": [
            {
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
            }
        ],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "rToken_underlying_asset",
        "inputs": [],
        "outputs": [
            {
                "type": "core::starknet::contract_address::ContractAddress"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "get_repay_amount_borrow_vault",
        "inputs": [
            {
                "name": "borrower",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "loan_id",
                "type": "core::felt252"
            }
        ],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "incentive_accrued_interest",
        "inputs": [],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "accrued_interest",
        "inputs": [],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "preview_redeem",
        "inputs": [
            {
                "name": "rToken_shares",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "preview_withdraw",
        "inputs": [
            {
                "name": "assets",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "name",
        "inputs": [],
        "outputs": [
            {
                "type": "core::byte_array::ByteArray"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "symbol",
        "inputs": [],
        "outputs": [
            {
                "type": "core::byte_array::ByteArray"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "decimals",
        "inputs": [],
        "outputs": [
            {
                "type": "core::felt252"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "totalSupply",
        "inputs": [],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "unaccrued_total_supply",
        "inputs": [],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "balanceOf",
        "inputs": [
            {
                "name": "account",
                "type": "core::starknet::contract_address::ContractAddress"
            }
        ],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "allowances",
        "inputs": [
            {
                "name": "owner",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "spender",
                "type": "core::starknet::contract_address::ContractAddress"
            }
        ],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "get_next_withdrawal_reset_time",
        "inputs": [],
        "outputs": [
            {
                "type": "core::integer::u64"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "get_deposit_reserves_snapshot",
        "inputs": [],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "get_daily_withdrawal_threshold",
        "inputs": [],
        "outputs": [
            {
                "type": "core::felt252"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "get_min_snapshot_reserves",
        "inputs": [],
        "outputs": [
            {
                "type": "core::integer::u256"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "impl",
        "name": "SecurityImpl",
        "interface_name": "common::components::security::ISecurity"
    },
    {
        "type": "function",
        "name": "upgrade",
        "inputs": [
            {
                "name": "new_class_hash",
                "type": "core::starknet::class_hash::ClassHash"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "pause",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "unpause",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "is_paused",
        "inputs": [],
        "outputs": [
            {
                "type": "core::bool"
            }
        ],
        "state_mutability": "view"
    },
    {
        "type": "function",
        "name": "set_access_control",
        "inputs": [
            {
                "name": "access_control",
                "type": "core::starknet::contract_address::ContractAddress"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "constructor",
        "name": "constructor",
        "inputs": [
            {
                "name": "asset",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "name_",
                "type": "core::byte_array::ByteArray"
            },
            {
                "name": "symbol_",
                "type": "core::byte_array::ByteArray"
            },
            {
                "name": "decimals_",
                "type": "core::felt252"
            },
            {
                "name": "_v1_core_diamond_address",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "new_admin",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "governor",
                "type": "core::starknet::contract_address::ContractAddress"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
        "kind": "struct",
        "members": [
            {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "Upgraded",
                "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
                "kind": "nested"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::security::pausable::PausableComponent::Paused",
        "kind": "struct",
        "members": [
            {
                "name": "account",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::security::pausable::PausableComponent::Unpaused",
        "kind": "struct",
        "members": [
            {
                "name": "account",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::security::pausable::PausableComponent::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "Paused",
                "type": "openzeppelin::security::pausable::PausableComponent::Paused",
                "kind": "nested"
            },
            {
                "name": "Unpaused",
                "type": "openzeppelin::security::pausable::PausableComponent::Unpaused",
                "kind": "nested"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
        "kind": "enum",
        "variants": []
    },
    {
        "type": "event",
        "name": "common::components::security::SecurityComponent::Event",
        "kind": "enum",
        "variants": []
    },
    {
        "type": "event",
        "name": "openzeppelin::token::erc20::erc20::ERC20Component::Transfer",
        "kind": "struct",
        "members": [
            {
                "name": "from",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "to",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "value",
                "type": "core::integer::u256",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::token::erc20::erc20::ERC20Component::Approval",
        "kind": "struct",
        "members": [
            {
                "name": "owner",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "spender",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "value",
                "type": "core::integer::u256",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::token::erc20::erc20::ERC20Component::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "Transfer",
                "type": "openzeppelin::token::erc20::erc20::ERC20Component::Transfer",
                "kind": "nested"
            },
            {
                "name": "Approval",
                "type": "openzeppelin::token::erc20::erc20::ERC20Component::Approval",
                "kind": "nested"
            }
        ]
    },
    {
        "type": "event",
        "name": "v1_core::components::supply::module::SupplyComponent::Event",
        "kind": "enum",
        "variants": []
    },
    {
        "type": "event",
        "name": "v1_core::contracts::supply::Supply::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "UpgradeableEvent",
                "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
                "kind": "flat"
            },
            {
                "name": "PausableEvent",
                "type": "openzeppelin::security::pausable::PausableComponent::Event",
                "kind": "flat"
            },
            {
                "name": "ReentrancyGuardEvent",
                "type": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
                "kind": "flat"
            },
            {
                "name": "SecurityEvent",
                "type": "common::components::security::SecurityComponent::Event",
                "kind": "flat"
            },
            {
                "name": "ERC20Event",
                "type": "openzeppelin::token::erc20::erc20::ERC20Component::Event",
                "kind": "flat"
            },
            {
                "name": "SupplyEvent",
                "type": "v1_core::components::supply::module::SupplyComponent::Event",
                "kind": "flat"
            }
        ]
    }
]